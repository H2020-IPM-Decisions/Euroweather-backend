#!/usr/bin/python3
"""
    Copyright (C) 2023  Johannes Tobiassen Langvatn, Met Norway

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
import os
import logging
import subprocess
from poller_and_downloader import Poller, Downloader
from config_and_logger import init_logging, init_config
from forecaster import forecaster, forecast_archiver

logger = logging.getLogger(__name__)
init_logging(logger)
CONFIG = init_config()
base_path = CONFIG.get("base_path")
ALL_PATH = CONFIG.get("all_path")
ARCHIVE_PATH = CONFIG.get("archive_path")
logger.debug(f"\nAll path is: {ALL_PATH}\nArchive path is: {ARCHIVE_PATH}")

os.makedirs(ALL_PATH+"grib", exist_ok=True)
dwd_poller = Poller("Anonymous", "", "", main_cycles=CONFIG.get("main_cycles"))
reftime, ready = dwd_poller.poll()
logger.info(f"Reftime was found to be {reftime} with status {ready}")
reftime = "2024040800"
if ready:
    DOWNLOADED = True
    dwd_downloader = Downloader(
        dwd_poller, ALL_PATH+"grib/")
    if not os.path.isfile(ALL_PATH + f"all{reftime}.nc"):
        DOWNLOADED = dwd_downloader.download_and_unzip(reftime)

    if DOWNLOADED:
        logger.info("Catting forecast-gribs")
        subprocess.run(f"cat {ALL_PATH}grib/*{reftime}*.grib2 > {ALL_PATH}forecast_{reftime}.grib2",
                       shell=True, check=True)
        logger.info("Converting from grib to netcdf")
        subprocess.run(f"fimex-1.9 --input.file {ALL_PATH}forecast_{reftime}.grib2 --input.config " +
                       f"{base_path}cdmGribReaderConfig.xml --output.file {ALL_PATH}all{reftime}_tmp.nc",
                       shell=True, check=True)
        forecaster(f"{ALL_PATH}all{reftime}_tmp.nc", f"{ALL_PATH}all{reftime}.nc")
        os.remove(f"{ALL_PATH}all{reftime}_tmp.nc")
        logger.info(f"Readied the forecast at {ALL_PATH}all{reftime}.nc")
        forecast_archiver(f"{ALL_PATH}all{reftime}.nc", reftime)

    else:
        logger.info("Forecast was ready, but not downloaded")
